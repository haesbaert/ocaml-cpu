(library
 (name cpu)
 (public_name cpu)
 (libraries unix str
  (select ioreg.ml from
   (cpu_apple_ioreg -> ioreg.default.ml)
   (                -> ioreg.nop.ml))
  (select amd64.ml from
   (amd64           -> amd64.default.ml)
   (                -> amd64.nop.ml)))
 (modules lcpu query affinity topology ioreg)
 (private_modules ioreg)
 (foreign_stubs (language c) (names cpu_stubs))
 (c_library_flags (-lpthread)))

(rule
 (target ioreg.nop.ml)
 (action (bash "touch ioreg.nop.ml")))
(rule
 (target amd64.nop.ml)
 (action (bash "touch amd64.nop.ml")))

(rule
 (target query.ml)
 (enabled_if (= %{system} "linux"))
 (action (copy query_linux.ml query.ml)))
(rule
 (target query.ml)
 (enabled_if (= %{system} "macosx"))
 (action (copy query_apple.ml query.ml)))
(rule
 (target query.ml)
 (enabled_if (or (= %{system} "freebsd")
              (= %{system} "netbsd")
              (= %{system} "openbsd")))
 (action (copy query_fake.ml query.ml)))

(rule
 (target topology.ml)
 (enabled_if (and (= %{architecture} "amd64")
              (or (= %{system} "linux") (= %{system} "freebsd"))))
 (action (copy topology_amd64.ml topology.ml)))
(rule
 (target topology.ml)
 (enabled_if (and (= %{system} "linux") (not (= %{architecture} "amd64"))))
 (action (copy topology_linux.ml topology.ml)))
(rule
 (target topology.ml)
 (enabled_if (= %{system} "macosx"))
 (action (copy topology_apple.ml topology.ml)))
(rule
 (target topology.ml)
 (enabled_if (or
              (= %{system} "netbsd")
              (= %{system} "openbsd")))
 (action (copy topology_fake.ml topology.ml)))
